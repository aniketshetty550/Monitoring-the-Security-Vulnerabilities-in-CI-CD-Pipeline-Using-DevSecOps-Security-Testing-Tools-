on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'

name: cloudrun-deploy and security scanning

env:
  IMAGE: vuln-image
  PROFILE: prod

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    permissions:
      id-token: write
      contents: read
      actions: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - id: 'gcloud'
      name: 'gcloud'
      run: |-
        gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
        gcloud components install docker-credential-gcr
        gcloud --quiet auth configure-docker

    - name: Generate build ID
      id: prep  
      run: |
        env=prod
        sha=${GITHUB_SHA::8}
        ts=$(date +%Y%m%d%H%M%S)
        echo "BUILD_ID=${env}-${ts}-${sha}" >> $GITHUB_ENV

    - name: Build docker
      run: |-
        GCR_IMAGE=gcr.io/${{ secrets.GCP_PROJECT }}/$IMAGE
        docker buildx build . --tag $GCR_IMAGE --push
        echo "image=$GCR_IMAGE" >> $GITHUB_ENV

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@v0.10.0
      with:
        image-ref: $GCR_IMAGE
        cache-dir: ${{ runner.temp }}/trivy-cache
        exit-code: '0'
        severity: 'MEDIUM,HIGH,CRITICAL'

    # Push the Docker image to Google Container Registry
    - name: Deploy to Cloud Run
      run: |-
        gcloud config set project ${{ secrets.GCP_PROJECT }}
        gcloud config set run/region us-central1
        gcloud run deploy vuln-image --image=$GCR_IMAGE \
          --platform managed \
          --allow-unauthenticated

    - name: snyk test
      continue-on-error: true
      run: |-
        npm install snyk -g
        snyk auth ${{ secrets.SNYK_API_KEY }}
        snyk code test

    - name: Run HawkScan
      uses: stackhawk/hawkscan-action@v2.2.0
      with: 
        apiKey: ${{ secrets.HAWK_API_KEY }}
